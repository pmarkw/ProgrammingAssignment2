find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
find_package("KernSmooth")
install.packages("KernSmooth")
libarary(KernSmooth)
library(KernSmooth)
clear
load("C:/PMW/MyWorking.pmw/Coursera/RPrgWk2/.RData")
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/makeVector.R')
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/cachemean.R')
merk <- makeVector
merk
merk$set(1:100)
z <- c(1:100)
merk <- makeVector(z)
cachemean(merk)
cachemean(merk)
z <- c(1:10000)
merk <- makeVector(z)
cachemean(merk)
cachemean(merk)
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/makeVector.R')
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/cachemean.R')
setwd("C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2")
x <- c(2,5)
y <- c(-3, -7)
A <- rbind(x,y)
A
C <- solve(A)
c
C
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(A)
merk <- makeCacheMatrix(A)
merk
merk$get
A
merk.get()
merk
merk$get
merk$get()
merk$getinverse()
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
merk <- makeCacheMatrix(A)
merk$cacheSolve()
A()
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
merk <- makeCacheMatrix(A)
merk$cacheSolve()
B <- matrix()
is.null(B)
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
merk <- makeCacheMatrix(A)
merk$cacheSolve()
merk$setinverse(C)
merk$cacheSolve()
merk$getinverse()
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
merk <- makeCacheMatrix(A)
merk$cacheSolve()
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
merk <- makeCacheMatrix(A)
merk$cacheSolve()
merk$cacheSolve(merk)
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/cachematrix.R')
merk <- makeCacheMatrix(A)
merk$getinverse()
cachematrix(merk)
cacheSolve(merk)
cacheSolve(merk)
merk$get()
merk$getinverse()
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/makeMerkMatrix.R')
merk <- makeMerkMatrix(A)
merk$get()
merk$getinverse()
merk$getinverse()
source('C:/PMW/MyWorking.pmw/Coursera/RPrgWk3/ProgrammingAssignment2/makeMerkMatrix.R')
merk <- makeMerkMatrix(A)
merk$get()
merk$getinverse()
merk$getinverse()
merk <- makeMerkMatrix(A)
merk$getinverse()
merk$getinverse()
merk <- makeMerkMatrix(C)
merk$getinverse()
merk$getinverse()
